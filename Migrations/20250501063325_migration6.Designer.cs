// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projet.Models;

#nullable disable

namespace Projet.Migrations
{
    [DbContext(typeof(ApplicationdbContext))]
    [Migration("20250501063325_migration6")]
    partial class migration6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Projet.Models.Affectation", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("dateaffectation")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("tacheId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("tacheId");

                    b.ToTable("affectations");
                });

            modelBuilder.Entity("Projet.Models.Project", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("datedebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("datefin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("titre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("projet");
                });

            modelBuilder.Entity("Projet.Models.Rapport", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("datecreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("rapports");
                });

            modelBuilder.Entity("Projet.Models.Tache", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id"));

                    b.Property<DateTime>("datedebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("datefin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("projetId")
                        .HasColumnType("bigint");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("titre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("projetId");

                    b.ToTable("taches");
                });

            modelBuilder.Entity("Projet.Models.Utilisateur", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("utilisateurs");
                });

            modelBuilder.Entity("Projet.Models.Affectation", b =>
                {
                    b.HasOne("Projet.Models.Tache", "tache")
                        .WithMany("affectations")
                        .HasForeignKey("tacheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tache");
                });

            modelBuilder.Entity("Projet.Models.Tache", b =>
                {
                    b.HasOne("Projet.Models.Project", "projet")
                        .WithMany("taches")
                        .HasForeignKey("projetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("projet");
                });

            modelBuilder.Entity("Projet.Models.Project", b =>
                {
                    b.Navigation("taches");
                });

            modelBuilder.Entity("Projet.Models.Tache", b =>
                {
                    b.Navigation("affectations");
                });
#pragma warning restore 612, 618
        }
    }
}
